name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Start services
        run: |
          docker compose -f docker-compose.yml up -d
          echo "Waiting for MySQL to be ready..."
          timeout 120 bash -c 'until docker compose exec db mysqladmin ping -uroot -ptest --silent; do sleep 5; echo "Waiting..."; done'

      - name: Verify MySQL
        run: |
          docker compose exec db mysql -uroot -ptest -e "SHOW DATABASES;"
          docker compose exec db mysql -uroot -ptest pos_db -e "SHOW TABLES;"

      - name: Run tests
        run: npm test
        env:
          DB_HOST: db
          DB_USER: root
          DB_PASSWORD: test
          DB_NAME: pos_db
          DB_PORT: 3306

      - name: Stop services
        if: always()
        run: docker compose -f docker-compose.yml down -v --remove-orphans

      - name: Build application
        run: npm run build

      - name: Security audit
        run: npm audit || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/
