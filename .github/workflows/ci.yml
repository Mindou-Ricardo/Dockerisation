name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.39
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_DATABASE: pos_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -uroot -ptest"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Start services
        run: |
          docker compose -f docker-compose.yml up -d --wait
          docker compose ps

      - name: Check MySQL status
        run: |
          echo "MySQL container logs:"
          docker compose logs db
          echo "MySQL health status:"
          docker inspect --format='{{json .State.Health}}' $(docker compose ps -q db)

      - name: Verify MySQL
        run: |
          for i in {1..10}; do
            if docker compose exec -T db mysql -uroot -ptest -e "SHOW DATABASES;"; then
              echo "MySQL est opérationnel"
              break
            else
              echo "Tentative $i/10 - MySQL n'est pas encore prêt"
              sleep 5
            fi
          done

      - name: Run tests
        run: npm test
        env:
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: test
          DB_NAME: pos_db
          DB_PORT: 3306

      - name: Stop services
        if: always()
        run: docker compose -f docker-compose.yml down -v

      - name: Build application
        run: npm run build

      - name: Security audit
        run: npm audit || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/
